package practice;

import java.util.*;

//https://www.acmicpc.net/problem/2468


public class Safezone2468 {
	
	static int dx[] = {1, -1, 0, 0};
	static int dy[] = {0, 0, 1, -1};
	static int cnt[];
	
	public static void dfs(int[][] a, int[][] b, int i, int j, int n, int rain)
	{
		
				for(int k=0; k<4; k++){
					int x = i + dx[k];
					int y = j + dy[k];
					if(x>=0 && y>=0 && x<n && y<n && b[x][y]==0) {
						
						if(a[x][y] > rain){
							if(b[i][j] != -1){
								b[x][y] = b[i][j];
							}
							else{
								b[x][y] = ++cnt[rain];
							}
							dfs(a, b, x, y, n, rain);
						}
						else{
							b[x][y] = -1;
						}
					}
		}
		
	}

	static Scanner sc = new Scanner(System.in);
	
	public static void main(String[] args) {
		int n = sc.nextInt();
		int[][] a = new int[n][n];
		int max = 0;
		
		for(int i=0; i<n; i++){
			for(int j=0; j<n; j++){
				a[i][j] = sc.nextInt();
				max = (max<a[i][j]) ? a[i][j] : max;	// 2 <= max <= 100
			}
		}

		cnt = new int[max+1];

		for(int rain = 0; rain<max; rain++){ //1부터 시작하면 틀림. rain=max 일땐 어차피 다잠기니까 검사 안해도 됨. 
		
			int[][] b = new int[n][n];
			
			if(a[0][0] > rain)
				b[0][0] = ++cnt[rain];
			else
				b[0][0] = -1;
			
			for(int i=0; i<n; i++){
				for(int j=0; j<n; j++){
					dfs(a, b, i, j, n, rain);
				}
			}
		}
		
		int ans = 0;
		for(int i : cnt){
			ans = (i>ans) ? i:ans;
		}
		
		System.out.println(ans);
	}
}
/*
5
6 8 2 6 2
3 2 3 4 6
6 7 3 3 2
7 2 5 3 6
8 9 5 2 7
*/
